openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user-data/upload:
    post:
      summary: 'Upload Data with CSV file.'
      operationId: uploadDataWithCSVFile
      description: ''
      parameters: []
      responses:
        202:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'The file has been successfully uploaded and is being processed.'
                  data:
                    name: random_name_123456.csv
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The file has been successfully uploaded and is being processed.'
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: random_name_123456.csv
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation errors'
                  data:
                    file:
                      - 'The file field is required.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation errors'
                  data:
                    type: object
                    properties:
                      file:
                        type: array
                        example:
                          - 'The file field is required.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Failed to upload the file. Please try again later.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Failed to upload the file. Please try again later.'
      tags:
        - 'User Data'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'The CSV file to upload.'
              required:
                - file
      security: []
  /api/user-data:
    get:
      summary: 'Retrieve a list of user data.'
      operationId: retrieveAListOfUserData
      description: ''
      parameters:
        -
          in: query
          name: first_name
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 50 characters.'
          example: A
          required: false
          schema:
            type: string
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 50 characters.'
            example: A
        -
          in: query
          name: last_name
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 50 characters.'
          example: A
          required: false
          schema:
            type: string
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 50 characters.'
            example: A
        -
          in: query
          name: age
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must be at least 18. Must not be greater than 80.'
          example: 30
          required: false
          schema:
            type: integer
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must be at least 18. Must not be greater than 80.'
            example: 30
        -
          in: query
          name: gender
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present.'
          example: male
          required: false
          schema:
            type: string
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present.'
            example: male
            enum:
              - male
              - female
        -
          in: query
          name: mobile_number
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 25 characters.'
          example: '123'
          required: false
          schema:
            type: string
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 25 characters.'
            example: '123'
        -
          in: query
          name: email
          description: 'Must be a valid email address. This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 100 characters.'
          example: test@gmail.com
          required: false
          schema:
            type: string
            description: 'Must be a valid email address. This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 100 characters.'
            example: test@gmail.com
        -
          in: query
          name: city
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 100 characters.'
          example: London
          required: false
          schema:
            type: string
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 100 characters.'
            example: London
        -
          in: query
          name: login
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 50 characters.'
          example: A
          required: false
          schema:
            type: string
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must not be greater than 50 characters.'
            example: A
        -
          in: query
          name: car_model
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present.'
          example: BMW
          required: false
          schema:
            type: string
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present.'
            example: BMW
            enum:
              - BMW
              - Mercedes
              - Ford
              - Toyota
              - Honda
              - Fiat
              - Peugeot
              - Nissan
              - Volkswagen
        -
          in: query
          name: salary
          description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must be at least 1000. Must not be greater than 5000.'
          example: 1000
          required: false
          schema:
            type: integer
            description: 'This field is required when none of <code>first_name</code>, <code>last_name</code>, <code>age</code>, <code>gender</code>, <code>mobile_number</code>, <code>email</code>, <code>city</code>, <code>login</code>, <code>car_model</code>, and <code>salary</code> are present. Must be at least 1000. Must not be greater than 5000.'
            example: 1000
        -
          in: query
          name: limit
          description: 'Must be at least 1. Must not be greater than 1000.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'Must be at least 1. Must not be greater than 1000.'
            example: 10
        -
          in: query
          name: offset
          description: 'Must be at least 0.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'Must be at least 0.'
            example: 0
        -
          in: query
          name: sort_by
          description: ''
          example: age
          required: false
          schema:
            type: string
            description: ''
            example: age
            enum:
              - first_name
              - last_name
              - age
              - gender
              - mobile_number
              - email
              - city
              - login
              - car_model
              - salary
        -
          in: query
          name: order_by
          description: ''
          example: asc
          required: false
          schema:
            type: string
            description: ''
            example: asc
            enum:
              - asc
              - desc
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"success": true, "message": "Ok", "data": [[...],[...]]}'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation errors'
                  data:
                    age:
                      - 'The age field must be at least 18.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation errors'
                  data:
                    type: object
                    properties:
                      age:
                        type: array
                        example:
                          - 'The age field must be at least 18.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Failed to upload the file. Please try again later.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Failed to upload the file. Please try again later.'
      tags:
        - 'User Data'
      security: []
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'User Data'
    description: ''
